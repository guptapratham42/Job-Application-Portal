{"ast":null,"code":"var _jsxFileName = \"/home/pratham/acad/Sem-4/DASS/Assignments/1/Final/Job-Application-Portal/frontend/src/components/Applicants/MyApplications.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Popup from \"./Popup\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nclass UsersList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jobs: [],\n      addModelshow: false\n    };\n    this.handleClickDelete = this.handleClickDelete.bind(this);\n    this.handleClickUpdate = this.handleClickUpdate.bind(this);\n  }\n\n  handleClickUpdate() {\n    this.setState({\n      addModelshow: true\n    });\n  }\n\n  handleClickDelete(id) {\n    console.log(id);\n    var temp = '{ \"id\": \"' + id + '\"}';\n    console.log(temp);\n    var jsonid = JSON.parse(temp);\n    console.log(jsonid);\n    axios.post('http://localhost:4000/jobs/DeleteJob', jsonid).then(res => {\n      if (res.data.msg) {\n        window.location.reload();\n      }\n    });\n  }\n\n  componentDidMount() {\n    var user_info = JSON.parse(localStorage.getItem(\"LoggedinUser\"));\n    axios.post('http://localhost:4000/jobs/MyJobs', user_info).then(res => {\n      console.log(res.data);\n      this.setState({\n        jobs: res.data\n      });\n    });\n  }\n\n  render() {\n    let addModelclose = () => this.setState({\n      addModelshow: false\n    });\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 9,\n      lg: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Table, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Title\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Date of Posting\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Maximum no of Applications\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"No of Positions\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.jobs.map((jobs, ind) => React.createElement(TableRow, {\n      key: ind,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, jobs.title), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, jobs.date_of_posting), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, jobs.no_of_applicants), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, jobs.no_of_positions), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.handleClickDelete(jobs._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Delete Job\")), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.handleClickUpdate(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Update Job\"), React.createElement(Popup, {\n      onHide: addModelclose,\n      show: this.state.addModelshow,\n      jobs: jobs._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }))))))))));\n  }\n\n}\n\nexport default UsersList;","map":{"version":3,"sources":["/home/pratham/acad/Sem-4/DASS/Assignments/1/Final/Job-Application-Portal/frontend/src/components/Applicants/MyApplications.js"],"names":["React","Component","ReactDOM","axios","Paper","Grid","TableCell","TableHead","TableRow","Table","TableBody","Popup","SearchIcon","UsersList","constructor","props","state","jobs","addModelshow","handleClickDelete","bind","handleClickUpdate","setState","id","console","log","temp","jsonid","JSON","parse","post","then","res","data","msg","window","location","reload","componentDidMount","user_info","localStorage","getItem","render","addModelclose","map","ind","title","date_of_posting","no_of_applicants","no_of_positions","_id"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Popup from \"./Popup\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nclass UsersList extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {jobs: [], addModelshow:false};\n        this.handleClickDelete = this.handleClickDelete.bind(this);\n        this.handleClickUpdate = this.handleClickUpdate.bind(this);\n    }\n    handleClickUpdate()\n    {\n        this.setState({addModelshow:true});\n    }\n    handleClickDelete(id)\n    {\n        console.log(id);\n        var temp= '{ \"id\": \"'+ id + '\"}';\n        console.log(temp);\n        var jsonid=JSON.parse(temp);\n        console.log(jsonid);\n        axios.post('http://localhost:4000/jobs/DeleteJob', jsonid)\n        .then(\n            res => {\n                if(res.data.msg)\n                {\n                    window.location.reload();\n                }\n            }\n        )\n    }\n    componentDidMount() {\n        var user_info=JSON.parse(localStorage.getItem(\"LoggedinUser\"));\n        axios.post('http://localhost:4000/jobs/MyJobs', user_info)\n        .then(res => {\n            console.log(res.data);\n            this.setState({jobs: res.data});\n           })\n        ;\n        \n    }\n    render() {\n        let addModelclose=() => this.setState({addModelshow:false});\n        return (\n            <div>\n                <Grid container>\n                    <Grid item xs={12} md={9} lg={9}>\n                        <Paper>\n                            <Table size=\"small\">\n                                <TableHead>\n                                    <TableRow>\n                                            <TableCell>Title</TableCell>\n                                            <TableCell>Date of Posting</TableCell>\n                                            <TableCell>Maximum no of Applications</TableCell>\n                                            <TableCell>No of Positions</TableCell>\n                                            <TableCell></TableCell>\n                                            <TableCell></TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.jobs.map((jobs,ind) => (\n                                        <TableRow key={ind}>\n                                            <TableCell>{jobs.title}</TableCell>\n                                            <TableCell>{jobs.date_of_posting}</TableCell>\n                                            <TableCell>{jobs.no_of_applicants}</TableCell>\n                                            <TableCell>{jobs.no_of_positions}</TableCell>\n                                            <TableCell><button onClick={() => this.handleClickDelete(jobs._id)}>\n                                            Delete Job\n                                            </button></TableCell>\n                                            <TableCell><button onClick={() => this.handleClickUpdate()}>\n                                            Update Job\n                                            </button>\n                                            <Popup onHide={addModelclose} show={this.state.addModelshow} jobs={jobs._id}></Popup>\n                                            </TableCell>\n                                        </TableRow>\n                                ))}\n                                </TableBody>\n                            </Table>\n                        </Paper>               \n                    </Grid>    \n                </Grid>            \n            </div>\n        )\n    }\n}\n\nexport default UsersList;"]},"metadata":{},"sourceType":"module"}