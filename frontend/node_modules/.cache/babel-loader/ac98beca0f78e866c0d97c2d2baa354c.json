{"ast":null,"code":"var _jsxFileName = \"/home/pratham/acad/Sem-4/DASS/Assignments/1/Final/Job-Application-Portal/frontend/src/components/Applicants/AllJobs.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\nimport Popup from \"./Popup\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nclass UsersList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jobs: []\n    };\n  }\n\n  componentDidMount() {\n    var user_info = JSON.parse(localStorage.getItem(\"LoggedinUser\"));\n    axios.post('http://localhost:4000/jobs/MyJobs', user_info).then(res => {\n      console.log(res.data);\n      this.setState({\n        jobs: res.data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 9,\n      lg: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Table, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Title\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Date of Posting\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Maximum no of Applications\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"No of Positions\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.jobs.map((jobs, ind) => React.createElement(TableRow, {\n      key: ind,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, jobs.title), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, jobs.date_of_posting), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, jobs.no_of_applicants), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, jobs.no_of_positions), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.handleClickDelete(jobs._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Delete Job\")), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.handleClickUpdate(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Update Job\"), React.createElement(Popup, {\n      onHide: addModelclose,\n      show: this.state.addModelshow,\n      jobs: jobs._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))))))))));\n  }\n\n}\n\nexport default UsersList;","map":{"version":3,"sources":["/home/pratham/acad/Sem-4/DASS/Assignments/1/Final/Job-Application-Portal/frontend/src/components/Applicants/AllJobs.js"],"names":["React","Component","ReactDOM","axios","Paper","Grid","TableCell","TableHead","TableRow","Table","TableBody","TextField","List","ListItem","Divider","Autocomplete","IconButton","InputAdornment","Modal","Button","Row","Col","Form","Popup","SearchIcon","UsersList","constructor","props","state","jobs","componentDidMount","user_info","JSON","parse","localStorage","getItem","post","then","res","console","log","data","setState","render","map","ind","title","date_of_posting","no_of_applicants","no_of_positions","handleClickDelete","_id","handleClickUpdate","addModelclose","addModelshow"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\nimport Popup from \"./Popup\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nclass UsersList extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {jobs: []};\n    }\n    componentDidMount() {\n        var user_info=JSON.parse(localStorage.getItem(\"LoggedinUser\"));\n        axios.post('http://localhost:4000/jobs/MyJobs', user_info)\n        .then(res => {\n            console.log(res.data);\n            this.setState({jobs: res.data});\n           })\n        ;\n        \n    }\n    render() {\n        return (\n            <div>\n                <Grid container>\n                    <Grid item xs={12} md={9} lg={9}>\n                        <Paper>\n                            <Table size=\"small\">\n                                <TableHead>\n                                    <TableRow>\n                                            <TableCell>Title</TableCell>\n                                            <TableCell>Date of Posting</TableCell>\n                                            <TableCell>Maximum no of Applications</TableCell>\n                                            <TableCell>No of Positions</TableCell>\n                                            <TableCell></TableCell>\n                                            <TableCell></TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.jobs.map((jobs,ind) => (\n                                        <TableRow key={ind}>\n                                            <TableCell>{jobs.title}</TableCell>\n                                            <TableCell>{jobs.date_of_posting}</TableCell>\n                                            <TableCell>{jobs.no_of_applicants}</TableCell>\n                                            <TableCell>{jobs.no_of_positions}</TableCell>\n                                            <TableCell><button onClick={() => this.handleClickDelete(jobs._id)}>\n                                            Delete Job\n                                            </button></TableCell>\n                                            <TableCell><button onClick={() => this.handleClickUpdate()}>\n                                            Update Job\n                                            </button>\n                                            <Popup onHide={addModelclose} show={this.state.addModelshow} jobs={jobs._id}></Popup>\n                                            </TableCell>\n                                        </TableRow>\n                                ))}\n                                </TableBody>\n                            </Table>\n                        </Paper>               \n                    </Grid>    \n                </Grid>            \n            </div>\n        )\n    }\n}\n\nexport default UsersList;"]},"metadata":{},"sourceType":"module"}