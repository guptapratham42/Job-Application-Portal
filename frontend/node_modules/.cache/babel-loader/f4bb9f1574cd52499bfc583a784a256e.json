{"ast":null,"code":"var _jsxFileName = \"/home/pratham/acad/Sem-4/DASS/Assignments/1/Final/Job-Application-Portal/frontend/src/components/Applicants/Popup.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\nexport default class Popup extends Component {\n  constructor(props) {\n    super(props); //console.log(props);\n\n    this.state = {\n      name: '',\n      email: ''\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChangename = this.onChangename.bind(this); //this.onChangeemail = this.onChangeemail.bind(this);\n  } // componentWillUpdate(props, state)\n  // {\n  //     if(props.)\n  // }\n\n\n  getCurrentDate(separator = '') {\n    let newDate = new Date();\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n    return `${year}${separator}${month < 10 ? `0${month}` : `${month}`}${separator}${date}`;\n  }\n\n  onSubmit(e) {\n    e.preventDefault(); //\n\n    console.log(this.props); //console.log(this.state);\n    //var abc= new Date();\n\n    var user_info = JSON.parse(localStorage.getItem(\"LoggedinUser\"));\n    const new_application = {\n      applicant_name: user_info.user.name,\n      applicant_id: user_info.user._id,\n      date_of_application: Date.now(),\n      sop: this.state.name,\n      email_of_recruiter: this.props.jobs,\n      job_id: this.props.id,\n      job_title: this.props.title,\n      salary: this.props.salary //id: this.props.user\n\n    };\n    console.log(new_application);\n    axios.post('http://localhost:4000/jobs/Newapplication', new_application).then(res => {\n      console.log(res.data);\n\n      if (res.data._id) {\n        alert(\"Job Application sent!\"); //window.location.reload();\n      } else {\n        alert(\"Please enter SOP\");\n      } //this.setState({jobs: res.data});\n\n    });\n    this.props.onHide();\n  }\n\n  onChangename(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(Modal, Object.assign({}, this.props, {\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Please enter a text Statement of Purpose(SOP)\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"SOP: \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.name,\n      onChange: this.onChangename,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.props.onHide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Close\"), React.createElement(Button, {\n      onClick: this.onSubmit,\n      variant: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Save\")));\n  }\n\n}","map":{"version":3,"sources":["/home/pratham/acad/Sem-4/DASS/Assignments/1/Final/Job-Application-Portal/frontend/src/components/Applicants/Popup.js"],"names":["React","Component","axios","Modal","Button","Row","Col","Form","Popup","constructor","props","state","name","email","onSubmit","bind","onChangename","getCurrentDate","separator","newDate","Date","date","getDate","month","getMonth","year","getFullYear","e","preventDefault","console","log","user_info","JSON","parse","localStorage","getItem","new_application","applicant_name","user","applicant_id","_id","date_of_application","now","sop","email_of_recruiter","jobs","job_id","id","job_title","title","salary","post","then","res","data","alert","onHide","event","setState","target","value","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\n\nexport default class Popup extends Component {\n    \n    constructor(props) {\n        super(props);\n        //console.log(props);\n        this.state={\n            name:'',\n            email:'',\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangename = this.onChangename.bind(this);\n        //this.onChangeemail = this.onChangeemail.bind(this);\n    }\n    // componentWillUpdate(props, state)\n    // {\n    //     if(props.)\n    // }\n    getCurrentDate(separator=''){\n\n        let newDate = new Date()\n        let date = newDate.getDate();\n        let month = newDate.getMonth() + 1;\n        let year = newDate.getFullYear();\n        \n        return `${year}${separator}${month<10?`0${month}`:`${month}`}${separator}${date}`\n        }\n    onSubmit(e) {\n        e.preventDefault();\n        //\n        console.log(this.props);\n        //console.log(this.state);\n        //var abc= new Date();\n        var user_info=JSON.parse(localStorage.getItem(\"LoggedinUser\"));\n        const new_application ={\n            applicant_name: user_info.user.name,\n            applicant_id: user_info.user._id,\n            date_of_application: Date.now(),\n            sop: this.state.name,\n            email_of_recruiter: this.props.jobs,\n            job_id: this.props.id,\n            job_title: this.props.title,\n            salary: this.props.salary,\n            \n            //id: this.props.user\n        }\n        console.log(new_application);\n        axios.post('http://localhost:4000/jobs/Newapplication', new_application)\n        .then(res => {\n            console.log(res.data);\n            if(res.data._id)\n            {\n                alert(\"Job Application sent!\");\n                //window.location.reload();\n            }\n            else\n            {\n                alert(\"Please enter SOP\");\n            }\n            //this.setState({jobs: res.data});\n           })\n        ;\n        this.props.onHide();\n    }\n    onChangename(event) {\n        this.setState({ name: event.target.value });\n    }\n    render() {\n        return (\n            <Modal\n            {...this.props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n          >\n            <Modal.Header closeButton>\n              <Modal.Title id=\"contained-modal-title-vcenter\">\n                Please enter a text Statement of Purpose(SOP)\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>SOP: </label>\n                        <input type=\"text\" \n                               className=\"form-control\" \n                               value={this.state.name}\n                               onChange={this.onChangename}\n                               />\n                    </div>\n                </form>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button onClick={this.props.onHide}>Close</Button>\n              <Button onClick={this.onSubmit} variant=\"success\">Save</Button>\n            </Modal.Footer>\n          </Modal>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}