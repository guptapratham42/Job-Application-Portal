{"ast":null,"code":"var _jsxFileName = \"/home/pratham/acad/Sem-4/DASS/Assignments/1/Final/Job-Application-Portal/frontend/src/components/Applicants/MyApplications.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nclass UsersList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jobs: []\n    };\n  }\n\n  componentDidMount() {\n    var user_info = JSON.parse(localStorage.getItem(\"LoggedinUser\"));\n    axios.post('http://localhost:4000/jobs/MyApplications', user_info).then(res => {\n      //console.log(res.data);\n      this.setState({\n        jobs: res.data\n      });\n    });\n    const data = Promise.all(this.state.jobs.map(async function (jobs, i) {\n      let alldata = {};\n      alldata = { ...jobs\n      }; //let jobbid = ;\n\n      let arrr = await axios.post('http://localhost:4000/jobs/getjob', {\n        id: alldata.job_id\n      }).then(response => {\n        return response.data;\n      }); //  console.log(arrr.name);\n\n      alldata.salary = arrr.salary;\n      alldata.name_of_recruiter = arrr.name_of_recruiter;\n      return alldata;\n    }));\n    this.setState({\n      jobs: data\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 9,\n      lg: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Table, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Title\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Salary\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Maximum no of Applications\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.state.jobs.map((jobs, ind) => React.createElement(TableRow, {\n      key: ind,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, jobs.job_title), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, jobs.salary), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, jobs.name_of_recruiter)))))))));\n  }\n\n}\n\nexport default UsersList;","map":{"version":3,"sources":["/home/pratham/acad/Sem-4/DASS/Assignments/1/Final/Job-Application-Portal/frontend/src/components/Applicants/MyApplications.js"],"names":["React","Component","ReactDOM","axios","Paper","Grid","TableCell","TableHead","TableRow","Table","TableBody","SearchIcon","UsersList","constructor","props","state","jobs","componentDidMount","user_info","JSON","parse","localStorage","getItem","post","then","res","setState","data","Promise","all","map","i","alldata","arrr","id","job_id","response","salary","name_of_recruiter","render","ind","job_title"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport SearchIcon from \"@material-ui/icons/Search\";\nclass UsersList extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {jobs: []};\n    }\n    componentDidMount() {\n        var user_info=JSON.parse(localStorage.getItem(\"LoggedinUser\"));\n        axios.post('http://localhost:4000/jobs/MyApplications', user_info)\n        .then(res => {\n            //console.log(res.data);\n            this.setState({jobs: res.data});\n           })\n        ;\n        const data = Promise.all( this.state.jobs.map(async function(jobs, i){\n            let alldata = {};\n            alldata = {...jobs};\n            //let jobbid = ;\n            let arrr = await axios.post('http://localhost:4000/jobs/getjob', { id: alldata.job_id})\n            .then(response => {\n                return response.data;\n           });\n         //  console.log(arrr.name);\n           alldata.salary = arrr.salary;\n           alldata.name_of_recruiter=arrr.name_of_recruiter;\n           return alldata;\n        }));\n        this.setState({jobs: data});\n    }\n    render() {\n        return (\n            <div>\n                <Grid container>\n                    <Grid item xs={12} md={9} lg={9}>\n                        <Paper>\n                            <Table size=\"small\">\n                                <TableHead>\n                                    <TableRow>\n                                            <TableCell>Title</TableCell>\n                                            <TableCell>Salary</TableCell>\n                                            <TableCell>Maximum no of Applications</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.jobs.map((jobs,ind) => (\n                                        <TableRow key={ind}>\n                                            <TableCell>{jobs.job_title}</TableCell>\n                                            <TableCell>{jobs.salary}</TableCell>\n                                            <TableCell>{jobs.name_of_recruiter}</TableCell>\n                                        </TableRow>\n                                ))}\n                                </TableBody>\n                            </Table>\n                        </Paper>               \n                    </Grid>    \n                </Grid>            \n            </div>\n        )\n    }\n}\n\nexport default UsersList;"]},"metadata":{},"sourceType":"module"}